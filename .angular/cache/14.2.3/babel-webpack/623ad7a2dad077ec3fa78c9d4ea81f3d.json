{"ast":null,"code":"import _createClass from \"C:/Users/Fritz7x64/Documents/Angular/astro-info/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/Fritz7x64/Documents/Angular/astro-info/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nexport var Globals = /*#__PURE__*/(function () {\n  var Globals = /*#__PURE__*/_createClass(function Globals() {\n    _classCallCheck(this, Globals);\n  });\n\n  /////////////////////////////////\n  // Global constants and variables\n  /////////////////////////////////\n  // Data source (this setting can be changed dynamically in user settings)\n  // New databases can be added if they are ready in the backend, available\n  // database list is held in the dataSourceList variable in user.settings.service.ts\n  Globals.DATA_SOURCE = 0; // 0 = MongoDb\n  // Api source - APIs can be called from frontend or backend\n  // It refers to Google Timezone API, Flickr API and NASA API.\n  // This setting can be changed dynamically - user settings.\n\n  Globals.API_SOURCE = 1; // 0 = frontend, 1 = backend\n  // MongoDb specific\n\n  Globals.MONGODB_API_URL = \"https://astro-info-backend.vercel.app/api/mongodb\";\n  Globals.MONGODB_LOCATION = \"Atlas\";\n  Globals.MONGODB_CALLED_FROM = \"Vercel\"; // If you want to use MongoDb in your own local environment and maybe even develop your own backend\n  // with some other databases for astro-info app, you can use setting like this. Database can be easily\n  // recreated. It consists of 6 collections (tables) and all data can be found in /assets/data folder in\n  // JSON format (which is more than suitable for creating your own MongoDb database and api endpoints to\n  // play with).\n  // *\n  // public static MONGODB_API_URL: string = \"http://localhost:8080/api/mongodb\";\n  // public static MONGODB_LOCATION: string = \"Atlas\";\n  // public static MONGODB_CALLED_FROM: string = \"localhost\";\n  // API keys - if something happens to the backend, api calls can be made from frontend. This\n  // is controlled by the API_SOURCE variable (above) which can be also set from the app in\n  // user settings. In case of the need to switch api calls to frontend, user just needs to\n  // here set his own API keys for Google Maps (Timezone), Flickr and NASA. By default user\n  // does have to use any API keys as API calls go from backend in normal circumstances.\n  // *\n\n  Globals.GOOGLE_MAPS_API_KEY = \"YOUR-GOOGLE-MAPS-API-KEY\";\n  Globals.FLICKR_API_KEY = \"YOUR-FLICKR-API-KEY\";\n  Globals.NASA_API_KEY = \"YOUR-NASA-API-KEY\";\n  return Globals;\n})();","map":null,"metadata":{},"sourceType":"module"}