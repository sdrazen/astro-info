{"ast":null,"code":"import _classCallCheck from \"C:/Users/Fritz7x64/Documents/Angular/astro-info/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Fritz7x64/Documents/Angular/astro-info/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport * as i0 from \"@angular/core\";\nexport var UsnoService = /*#__PURE__*/(function () {\n  var UsnoService = /*#__PURE__*/function () {\n    function UsnoService(_http) {\n      _classCallCheck(this, UsnoService);\n\n      this._http = _http;\n    }\n\n    _createClass(UsnoService, [{\n      key: \"getNextMoonPhases\",\n      value: function getNextMoonPhases(date, nump) {\n        // date = m/d/yyyy\n        return this._http.get('http://api.usno.navy.mil/moon/phase?date=' + date + '&nump=' + nump.toString()).map(function (request) {\n          return request.json();\n        }).catch(this._serverError);\n      }\n    }, {\n      key: \"getAllMoonPhases\",\n      value: function getAllMoonPhases(year) {\n        return this._http.get('http://api.usno.navy.mil/moon/phase?year=' + year).map(function (request) {\n          return request.json();\n        }).catch(this._serverError);\n      }\n    }, {\n      key: \"getSunAndMoonData\",\n      value: function getSunAndMoonData(date, coords, tz) {\n        // date = m/d/yyyy\n        // coords = comma delimited latiitude and longitude\n        // tz = timezone\n        return this._http.get('http://api.usno.navy.mil/rstt/oneday?date=' + date + '&coords=' + coords + '&tz=' + tz).map(function (request) {\n          return request.json();\n        }).catch(this._serverError);\n      }\n    }, {\n      key: \"getSolarEclipses\",\n      value: function getSolarEclipses(year) {\n        return this._http.get('http://api.usno.navy.mil/eclipses/solar?year=' + year).map(function (request) {\n          return request.json();\n        }).catch(this._serverError);\n      }\n    }, {\n      key: \"_serverError\",\n      value: function _serverError(err) {\n        if (err instanceof Response) {\n          return Observable.throw(\"Server error...\");\n        }\n\n        return Observable.throw(err);\n      }\n    }]);\n\n    return UsnoService;\n  }();\n\n  UsnoService.ɵfac = function UsnoService_Factory(t) {\n    i0.ɵɵinvalidFactory();\n  };\n\n  UsnoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsnoService,\n    factory: UsnoService.ɵfac\n  });\n  return UsnoService;\n})();","map":null,"metadata":{},"sourceType":"module"}