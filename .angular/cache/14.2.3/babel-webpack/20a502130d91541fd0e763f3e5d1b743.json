{"ast":null,"code":"import _slicedToArray from \"C:/Users/Fritz7x64/Documents/Angular/astro-info/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"C:/Users/Fritz7x64/Documents/Angular/astro-info/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/Fritz7x64/Documents/Angular/astro-info/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Fritz7x64/Documents/Angular/astro-info/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { CalculationsService } from '../shared/calculations.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Globals } from 'common/globals';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../shared/calculations.service\"; // Initialize Firebase\n\nvar config = {\n  apiKey: \"AIzaSyCUw3vpmS_KlTUTtKfyXFvNzYa8pM5Vb0k\",\n  authDomain: \"astroinfo-59d91.firebaseapp.com\",\n  databaseURL: \"https://astroinfo-59d91.firebaseio.com\",\n  storageBucket: \"astroinfo-59d91.appspot.com\",\n  messagingSenderId: \"162775545478\"\n};\nfirebase.initializeApp(config);\nexport var BackendService = /*#__PURE__*/(function () {\n  var BackendService = /*#__PURE__*/function () {\n    function BackendService(_http, _calculationsService) {\n      _classCallCheck(this, BackendService);\n\n      this._http = _http;\n      this._calculationsService = _calculationsService;\n      this.allObjects = [];\n      this.objects = [];\n      this.filteredObjects = [];\n      this.isInitialGet = true;\n      this.allObjectTypes = [\"\"];\n      this.allConstellations = [\"\"];\n      this.allStores = [];\n      this.stores = [];\n      this.allLocations = [];\n      this.locations = [];\n      this.allMoonfeatures = [];\n      this.moonfeatures = [];\n      this.filteredMoonfeatures = [];\n      this.isInitialGetMoonfeatures = true;\n      this.allMoonfeatureTypes = [\"\"];\n      this.allMoonfeatureApprovalStatusTexts = [\"\"];\n      this.allSolarEclipses = [];\n      this.solarEclipses = [];\n      this.filteredSolarEclipses = [];\n      this.isInitialGetSolarEclipses = true;\n      this.allLunarEclipses = [];\n      this.lunarEclipses = [];\n      this.filteredLunarEclipses = [];\n      this.isInitialGetLunarEclipses = true;\n    }\n\n    _createClass(BackendService, [{\n      key: \"init\",\n      value: function init() {\n        // Data source changed, reset all data\n        this.allObjects = [];\n        this.objects = [];\n        this.filteredObjects = [];\n        this.isInitialGet = true;\n        this.allObjectTypes = [\"\"];\n        this.allConstellations = [\"\"];\n        this.allStores = [];\n        this.stores = [];\n        this.allLocations = [];\n        this.locations = [];\n        this.allMoonfeatures = [];\n        this.moonfeatures = [];\n        this.filteredMoonfeatures = [];\n        this.isInitialGetMoonfeatures = true;\n        this.allMoonfeatureTypes = [\"\"];\n        this.allMoonfeatureApprovalStatusTexts = [\"\"];\n        this.allSolarEclipses = [];\n        this.solarEclipses = [];\n        this.filteredSolarEclipses = [];\n        this.isInitialGetSolarEclipses = true;\n        this.allLunarEclipses = [];\n        this.lunarEclipses = [];\n        this.filteredLunarEclipses = [];\n        this.isInitialGetLunarEclipses = true;\n      }\n    }, {\n      key: \"getAllObjects\",\n      value: function getAllObjects(orderBy) {\n        var _this = this;\n\n        var p = new Promise(function (resolve, reject) {\n          if (Globals.DATA_SOURCE == 0) {\n            // Firebase\n            if (_this.allObjects.length === 0) {\n              firebase.database().ref('/dsos').orderByChild(orderBy).on('child_added', function (snapshot) {\n                var object;\n                object = snapshot.val();\n                object[\"key\"] = snapshot.key;\n\n                _this.allObjects.push(object); // Types\n\n\n                if (_this.allObjectTypes.indexOf(object.type) === -1) {\n                  _this.allObjectTypes.push(object.type);\n                } // Constellations\n\n\n                if (_this.allConstellations.indexOf(object.constellation) === -1) {\n                  _this.allConstellations.push(object.constellation);\n                } // Resolve\n\n\n                resolve();\n              }, function (error) {\n                reject(error);\n              });\n            } else {\n              resolve();\n            }\n          }\n\n          if (Globals.DATA_SOURCE == 1) {\n            // MongoDb\n            if (_this.allObjects.length === 0) {\n              var dataFromMongoDb;\n\n              _this._http.get(Globals.MONGODB_API_URL + \"/dsos\").pipe(map(function (data) {\n                return data;\n              })).subscribe(function (arr) {\n                dataFromMongoDb = arr; // Sort data\n\n                dataFromMongoDb.sort(function (x, y) {\n                  var a = x[orderBy].toUpperCase(),\n                      b = y[orderBy].toUpperCase();\n                  return a == b ? 0 : a > b ? 1 : -1;\n                });\n                dataFromMongoDb.forEach(function (item) {\n                  var object;\n                  object = item;\n                  object[\"key\"] = item[\"_id\"];\n\n                  _this.allObjects.push(object); // Types\n\n\n                  if (_this.allObjectTypes.indexOf(object.type) === -1) {\n                    _this.allObjectTypes.push(object.type);\n                  } // Constellations\n\n\n                  if (_this.allConstellations.indexOf(object.constellation) === -1) {\n                    _this.allConstellations.push(object.constellation);\n                  }\n                }); // Resolve\n\n                resolve();\n              }, function (error) {\n                reject(error);\n              });\n            } else {\n              resolve();\n            }\n          }\n        });\n        return p;\n      }\n    }, {\n      key: \"getObjects\",\n      value: function getObjects(pageIndex, itemsPerPage, allObjects, filteredObjects) {\n        var _this2 = this;\n\n        this.objects = [];\n        var p = new Promise(function (resolve, reject) {\n          if (_this2.filteredObjects.length > 0) {\n            _this2.objects = filteredObjects.filter(function (value, index, array) {\n              return index >= (pageIndex - 1) * itemsPerPage && index <= (pageIndex - 1) * itemsPerPage + itemsPerPage - 1;\n            });\n          } else {\n            if (_this2.isInitialGet) {\n              _this2.objects = allObjects.filter(function (value, index, array) {\n                return index >= (pageIndex - 1) * itemsPerPage && index <= (pageIndex - 1) * itemsPerPage + itemsPerPage - 1;\n              });\n            }\n          }\n\n          resolve(_this2.objects);\n        });\n        return p;\n      } // getObjectByKey(key: number, allObjects: Array<IDataObjectListModel>): Promise<any> {\n      //     this.objects = [];\n      //     let p = new Promise ((resolve, reject) => {\n      //         this.objects = allObjects.filter((value, index, array) => {\n      //                             return (\n      //                                 (parseInt(value.key) == key)\n      //                             );\n      //                         });\n      //         resolve(this.objects);\n      //     })\n      //     return p;\n      // }\n\n    }, {\n      key: \"getObjectsBySearchCriteria\",\n      value: function getObjectsBySearchCriteria(searchcriteria, itemsPerPage, allObjects) {\n        var _this3 = this;\n\n        this.objects = [];\n        this.filteredObjects = [];\n        var p = new Promise(function (resolve, reject) {\n          _this3.objects = allObjects.filter(function (value, index, array) {\n            var altAz = [];\n            var altDMS = [];\n            var azDMS = []; // If there is no criteria regarding object position (alt, az) at given time, don't calculate, otherwise do calculate\n\n            if (searchcriteria.useAdditionalCriteria && searchcriteria.criteriaAltMin !== \"\" || searchcriteria.useAdditionalCriteria && searchcriteria.criteriaAltMax !== \"\" || searchcriteria.useAdditionalCriteria && searchcriteria.criteriaAzMin !== \"\" || searchcriteria.useAdditionalCriteria && searchcriteria.criteriaAzMax !== \"\") {\n              altAz = _this3.getObjectPosition(value.rightascension, value.declination, searchcriteria.criteriaLat, searchcriteria.criteriaLng, searchcriteria.criteriaTimeUt);\n              altDMS = _this3._calculationsService.convertDegreesDecimalToDegreesMinutesSeconds(altAz[0]);\n              azDMS = _this3._calculationsService.convertDegreesDecimalToDegreesMinutesSeconds(altAz[1]);\n            }\n\n            return (value.catalogueentry.toLowerCase().indexOf(searchcriteria.searchText.toLowerCase()) !== -1 || value.catalogueentry.toLowerCase().replace(\" \", \"\").indexOf(searchcriteria.searchText.toLowerCase()) !== -1 || value.familiarname.toLowerCase().indexOf(searchcriteria.searchText.toLowerCase()) !== -1 || value.alternativeentries.toLowerCase().indexOf(searchcriteria.searchText.toLowerCase()) !== -1) && (searchcriteria.useAdditionalCriteria && searchcriteria.criteriaType !== \"\" ? value.type.toLowerCase() === searchcriteria.criteriaType.toLowerCase() : true) && (searchcriteria.useAdditionalCriteria && searchcriteria.criteriaConstellation !== \"\" ? value.constellation.toLowerCase() === searchcriteria.criteriaConstellation.toLowerCase() : true) && (searchcriteria.useAdditionalCriteria && searchcriteria.criteriaMagnitudeMax !== \"\" ? parseFloat(value.magnitude) <= parseInt(searchcriteria.criteriaMagnitudeMax) : true) && (searchcriteria.useAdditionalCriteria && searchcriteria.criteriaSizeMin !== \"\" ? _this3.isSizeGreaterOrEqualToValueInMinutes(value.size, parseInt(searchcriteria.criteriaSizeMin)) : true) && (searchcriteria.useAdditionalCriteria && searchcriteria.criteriaAltMin !== \"\" ? altDMS[0] >= parseInt(searchcriteria.criteriaAltMin) : true) && (searchcriteria.useAdditionalCriteria && searchcriteria.criteriaAltMax !== \"\" ? altDMS[0] <= parseInt(searchcriteria.criteriaAltMax) : true) && (searchcriteria.useAdditionalCriteria && searchcriteria.criteriaAzMin !== \"\" ? azDMS[0] >= parseInt(searchcriteria.criteriaAzMin) : true) && (searchcriteria.useAdditionalCriteria && searchcriteria.criteriaAzMax !== \"\" ? azDMS[0] <= parseInt(searchcriteria.criteriaAzMax) : true);\n          });\n          _this3.filteredObjects = _this3.objects;\n          _this3.isInitialGet = false; // Resolve\n\n          resolve(_this3.objects);\n        });\n        return p;\n      }\n    }, {\n      key: \"getAllStores\",\n      value: function getAllStores(orderBy) {\n        var _this4 = this;\n\n        var p = new Promise(function (resolve, reject) {\n          if (Globals.DATA_SOURCE == 0) {\n            // Firebase\n            if (_this4.allStores.length === 0) {\n              firebase.database().ref('/stores').orderByChild(orderBy).on('child_added', function (snapshot) {\n                var store;\n                store = snapshot.val();\n                store[\"key\"] = snapshot.key;\n\n                _this4.allStores.push(store);\n\n                resolve();\n              }, function (error) {\n                reject(error);\n              });\n            } else {\n              resolve();\n            }\n          }\n\n          if (Globals.DATA_SOURCE == 1) {\n            // MongoDb\n            if (_this4.allStores.length === 0) {\n              var dataFromMongoDb;\n\n              _this4._http.get(Globals.MONGODB_API_URL + \"/stores\").subscribe(function (data) {\n                dataFromMongoDb = data; // Sort data\n\n                dataFromMongoDb.sort(function (x, y) {\n                  var a = x[orderBy].toUpperCase(),\n                      b = y[orderBy].toUpperCase();\n                  return a == b ? 0 : a > b ? 1 : -1;\n                });\n                dataFromMongoDb.forEach(function (item) {\n                  var store;\n                  store = item;\n                  store[\"key\"] = item[\"_id\"];\n\n                  _this4.allStores.push(store);\n                }); // Resolve\n\n                resolve();\n              }, function (error) {\n                reject(error);\n              });\n            } else {\n              resolve();\n            }\n          }\n        });\n        return p;\n      }\n    }, {\n      key: \"addStore\",\n      value: function addStore(store) {\n        var _this5 = this;\n\n        var p = new Promise(function (resolve, reject) {\n          if (Globals.DATA_SOURCE == 0) {\n            // Firebase\n            firebase.database().ref('/stores').push(store).then(function (snapshot) {\n              store[\"key\"] = snapshot.key;\n\n              _this5.allStores.push(store);\n\n              resolve(store);\n            }).catch(function (error) {\n              return reject(error);\n            });\n          }\n\n          if (Globals.DATA_SOURCE == 1) {\n            // MongoDb\n            var headers = new HttpHeaders();\n            headers.append('Content-Type', 'application/json');\n\n            _this5._http.post(Globals.MONGODB_API_URL + \"/store\", store, {\n              headers: headers\n            }).subscribe(function (item) {\n              store[\"key\"] = item[\"_id\"];\n\n              _this5.allStores.push(store); // Resolve\n\n\n              resolve(store);\n            }, function (err) {\n              return reject(err);\n            });\n          }\n        });\n        return p;\n      }\n    }, {\n      key: \"updateStore\",\n      value: function updateStore(storeKey, store) {\n        var _this6 = this;\n\n        var p = new Promise(function (resolve, reject) {\n          if (Globals.DATA_SOURCE == 0) {\n            // Firebase\n            firebase.database().ref('/stores/' + storeKey).set(store).then(function () {\n              store[\"key\"] = storeKey;\n              resolve(store);\n            }).catch(function (error) {\n              return reject(error);\n            });\n          }\n\n          if (Globals.DATA_SOURCE == 1) {\n            // MongoDb\n            var headers = new HttpHeaders();\n            headers.append('Content-Type', 'application/json');\n\n            _this6._http.put(Globals.MONGODB_API_URL + \"/store/\" + storeKey, store, {\n              headers: headers\n            }).subscribe(function (item) {\n              store[\"key\"] = storeKey; // Resolve\n\n              resolve(store);\n            }, function (err) {\n              return reject(err);\n            });\n          }\n        });\n        return p;\n      }\n    }, {\n      key: \"deleteStore\",\n      value: function deleteStore(storeKey) {\n        var _this7 = this;\n\n        var p = new Promise(function (resolve, reject) {\n          if (Globals.DATA_SOURCE == 0) {\n            // firebase\n            firebase.database().ref('/stores/' + storeKey).remove().then(function () {\n              resolve();\n            }).catch(function (error) {\n              return reject(error);\n            });\n          }\n\n          if (Globals.DATA_SOURCE == 1) {\n            // MongoDb\n            _this7._http.delete(Globals.MONGODB_API_URL + \"/store/\" + storeKey).subscribe(function (item) {\n              // Resolve\n              resolve();\n            }, function (err) {\n              return reject(err);\n            });\n          }\n        });\n        return p;\n      }\n    }, {\n      key: \"getAllLocations\",\n      value: function getAllLocations(orderBy) {\n        var _this8 = this;\n\n        var p = new Promise(function (resolve, reject) {\n          if (Globals.DATA_SOURCE == 0) {\n            // Firebase\n            if (_this8.allLocations.length === 0) {\n              firebase.database().ref('/locations').orderByChild(orderBy).on('child_added', function (snapshot) {\n                var location;\n                location = snapshot.val();\n                location[\"key\"] = snapshot.key;\n\n                _this8.allLocations.push(location);\n\n                resolve();\n              }, function (error) {\n                reject(error);\n              });\n            } else {\n              resolve();\n            }\n          }\n\n          if (Globals.DATA_SOURCE == 1) {\n            // MongoDb\n            if (_this8.allLocations.length === 0) {\n              var dataFromMongoDb;\n\n              _this8._http.get(Globals.MONGODB_API_URL + \"/locations\").subscribe(function (data) {\n                dataFromMongoDb = data; // Sort data\n\n                dataFromMongoDb.sort(function (x, y) {\n                  var a = x[orderBy].toUpperCase(),\n                      b = y[orderBy].toUpperCase();\n                  return a == b ? 0 : a > b ? 1 : -1;\n                });\n                dataFromMongoDb.forEach(function (item) {\n                  var location;\n                  location = item;\n                  location[\"key\"] = item[\"_id\"];\n\n                  _this8.allLocations.push(location);\n                }); // Resolve\n\n                resolve();\n              }, function (error) {\n                reject(error);\n              });\n            } else {\n              resolve();\n            }\n          }\n        });\n        return p;\n      }\n    }, {\n      key: \"addLocation\",\n      value: function addLocation(location) {\n        var _this9 = this;\n\n        var p = new Promise(function (resolve, reject) {\n          if (Globals.DATA_SOURCE == 0) {\n            // Firebase\n            firebase.database().ref('/locations').push(location).then(function (snapshot) {\n              location[\"key\"] = snapshot.key;\n\n              _this9.allLocations.push(location);\n\n              resolve(location);\n            }).catch(function (error) {\n              return reject(error);\n            });\n          }\n\n          if (Globals.DATA_SOURCE == 1) {\n            // MongoDb\n            var headers = new HttpHeaders();\n            headers.append('Content-Type', 'application/json');\n\n            _this9._http.post(Globals.MONGODB_API_URL + \"/location\", location, {\n              headers: headers\n            }).subscribe(function (item) {\n              location[\"key\"] = item[\"_id\"];\n\n              _this9.allLocations.push(location); // Resolve\n\n\n              resolve(location);\n            }, function (err) {\n              return reject(err);\n            });\n          }\n        });\n        return p;\n      }\n    }, {\n      key: \"updateLocation\",\n      value: function updateLocation(locationKey, location) {\n        var _this10 = this;\n\n        var p = new Promise(function (resolve, reject) {\n          if (Globals.DATA_SOURCE == 0) {\n            // Firebase\n            firebase.database().ref('/locations/' + locationKey).set(location).then(function () {\n              location[\"key\"] = locationKey;\n              resolve(location);\n            }).catch(function (error) {\n              return reject(error);\n            });\n          }\n\n          if (Globals.DATA_SOURCE == 1) {\n            // MongoDb\n            var headers = new HttpHeaders();\n            headers.append('Content-Type', 'application/json');\n\n            _this10._http.put(Globals.MONGODB_API_URL + \"/store/\" + locationKey, location, {\n              headers: headers\n            }).subscribe(function (item) {\n              location[\"key\"] = locationKey; // Resolve\n\n              resolve(location);\n            }, function (err) {\n              return reject(err);\n            });\n          }\n        });\n        return p;\n      }\n    }, {\n      key: \"deleteLocation\",\n      value: function deleteLocation(locationKey) {\n        var _this11 = this;\n\n        var p = new Promise(function (resolve, reject) {\n          if (Globals.DATA_SOURCE == 0) {\n            // Firebase\n            firebase.database().ref('/locations/' + locationKey).remove().then(function () {\n              resolve();\n            }).catch(function (error) {\n              return reject(error);\n            });\n          }\n\n          if (Globals.DATA_SOURCE == 1) {\n            // MongoDb\n            _this11._http.delete(Globals.MONGODB_API_URL + \"/location/\" + locationKey).subscribe(function (item) {\n              // Resolve\n              resolve();\n            }, function (err) {\n              return reject(err);\n            });\n          }\n        });\n        return p;\n      }\n    }, {\n      key: \"isSizeGreaterOrEqualToValueInMinutes\",\n      value: function isSizeGreaterOrEqualToValueInMinutes(sizeInMinutesAsString, valueInMinutes) {\n        var isOk = false;\n\n        if (sizeInMinutesAsString.indexOf(\" \") === -1) {\n          // Size as string consists of just one part, so check last character\n          if (sizeInMinutesAsString.slice(-1) === \"°\") {\n            isOk = true;\n          } else if (sizeInMinutesAsString.slice(-1) === \"'\") {\n            parseFloat(sizeInMinutesAsString.slice(0, -1)) >= valueInMinutes ? isOk = true : isOk = false;\n          } else if (sizeInMinutesAsString.slice(-1) === \"s\") {\n            isOk = false;\n          } else {\n            isOk = false;\n          }\n        } else {\n          // Size as string consists of more parts\n          var parsedSize = sizeInMinutesAsString.split(\" \");\n          parsedSize.forEach(function (part) {\n            if (part.slice(-1) === \"°\") {\n              return true;\n            } else if (part.slice(-1) === \"'\") {\n              if (parseFloat(sizeInMinutesAsString.slice(0, -1)) >= valueInMinutes) {\n                return true;\n              }\n            }\n          });\n        }\n\n        return isOk;\n      }\n    }, {\n      key: \"getObjectPosition\",\n      value: function getObjectPosition(ra, dec, lat, lng, timeUt) {\n        var RA = ra.replace(\"h\", \"\").replace(\"'\", \"\").replace(\"s\", \"\").split(\" \");\n        var RA_H = parseInt(RA[0]);\n        var RA_M = parseInt(RA[1]);\n        var RA_S = parseInt(RA[2]);\n        var DEC = dec.replace(\"°\", \"\").replace(\"'\", \"\").replace(\"s\", \"\").split(\" \");\n        var DEC_D = parseInt(DEC[0]);\n        var DEC_M = parseInt(DEC[1]);\n        var DEC_S = parseInt(DEC[2]);\n        var LAT = lat;\n        var LON = lng;\n        var time_ut = new Date(timeUt);\n        var dd = time_ut.getDate();\n        var mm = time_ut.getMonth() + 1;\n        var yyyy = time_ut.getFullYear();\n        var hh = time_ut.getHours();\n        var min = time_ut.getMinutes();\n        var altAz = [];\n        var altDMS = [];\n        var azDMS = [];\n        altAz = this._calculationsService.getAltAz(this._calculationsService.convertToHours(RA_H, RA_M, RA_S), this._calculationsService.convertToDegreesDecimal(DEC_D, DEC_M, DEC_S), LAT, LON, yyyy, mm, dd, hh, min);\n        return altAz;\n      }\n    }, {\n      key: \"getAllMoonfeatures\",\n      value: function getAllMoonfeatures(orderBy) {\n        var _this12 = this;\n\n        var p = new Promise(function (resolve, reject) {\n          if (Globals.DATA_SOURCE == 0) {\n            // Firebase\n            if (_this12.allMoonfeatures.length === 0) {\n              firebase.database().ref('/moonfeatures').orderByChild(orderBy).on('child_added', function (snapshot) {\n                var moonfeature;\n                moonfeature = snapshot.val();\n                moonfeature[\"key\"] = snapshot.key;\n                moonfeature[\"featuretypetext\"] = snapshot.val().featuretype.text;\n                moonfeature[\"approvalstatustext\"] = snapshot.val().approvalstatus.text;\n\n                _this12.allMoonfeatures.push(moonfeature); // Feature Types\n\n\n                if (_this12.allMoonfeatureTypes.indexOf(moonfeature.featuretypetext) === -1) {\n                  _this12.allMoonfeatureTypes.push(moonfeature.featuretypetext);\n                } // Approval status texts\n\n\n                if (_this12.allMoonfeatureApprovalStatusTexts.indexOf(moonfeature.approvalstatustext) === -1) {\n                  _this12.allMoonfeatureApprovalStatusTexts.push(moonfeature.approvalstatustext);\n                } // Resolve\n\n\n                resolve();\n              }, function (error) {\n                reject(error);\n              });\n            } else {\n              resolve();\n            }\n          }\n\n          if (Globals.DATA_SOURCE == 1) {\n            // MongoDb\n            if (_this12.allMoonfeatures.length === 0) {\n              var dataFromMongoDb;\n              var p_part1 = new Promise(function (resolve, reject) {\n                // Part one\n                _this12._http.get(Globals.MONGODB_API_URL + \"/moonfeatures1\").pipe(map(function (data) {\n                  return data;\n                })).subscribe(function (arr) {\n                  dataFromMongoDb = arr;\n                  console.log(\"Arr length: \" + arr.length); // Sort data\n\n                  dataFromMongoDb.sort(function (x, y) {\n                    var a = x[orderBy].toUpperCase(),\n                        b = y[orderBy].toUpperCase();\n                    return a == b ? 0 : a > b ? 1 : -1;\n                  });\n                  var p_part1_additionalinfo = new Promise(function (resolve, reject) {\n                    var _iterator = _createForOfIteratorHelper(dataFromMongoDb),\n                        _step;\n\n                    try {\n                      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                        var _step$value = _slicedToArray(_step.value, 2),\n                            item = _step$value[0],\n                            idx = _step$value[1];\n\n                        var moonfeature;\n                        moonfeature = item;\n                        moonfeature[\"key\"] = item[\"_id\"];\n\n                        _this12.allMoonfeatures.push(moonfeature); // Feature Types\n\n\n                        if (_this12.allMoonfeatureTypes.indexOf(moonfeature.featuretypetext) === -1) {\n                          console.log(\"Tu sam\");\n\n                          _this12.allMoonfeatureTypes.push(moonfeature.featuretypetext);\n                        } // Approval status texts\n\n\n                        if (_this12.allMoonfeatureApprovalStatusTexts.indexOf(moonfeature.approvalstatustext) === -1) {\n                          console.log(\"Tu sam\");\n\n                          _this12.allMoonfeatureApprovalStatusTexts.push(moonfeature.approvalstatustext);\n                        }\n\n                        if (idx == dataFromMongoDb.length - 1) {\n                          // Resolve p_part1_additionalinfo\n                          console.log(\"Resolving p_part1_additionalinfo\");\n                          console.log(\"Idx:\" + idx);\n                          console.log(\"Length of dataFromMongoDb:\" + dataFromMongoDb.length);\n                          resolve();\n                        }\n                      }\n                    } catch (err) {\n                      _iterator.e(err);\n                    } finally {\n                      _iterator.f();\n                    }\n                  });\n                  p_part1_additionalinfo.then(function () {\n                    // Resolve p1\n                    console.log(\"Resolving p_part1\");\n                    resolve();\n                  });\n                }, function (error) {\n                  reject(error);\n                });\n              });\n              p_part1.then(function () {\n                // Part two\n                _this12._http.get(Globals.MONGODB_API_URL + \"/moonfeatures2\").pipe(map(function (data) {\n                  return data;\n                })).subscribe(function (arr) {\n                  dataFromMongoDb = arr;\n                  console.log(\"Arr length: \" + arr.length); // Sort data\n\n                  dataFromMongoDb.sort(function (x, y) {\n                    var a = x[orderBy].toUpperCase(),\n                        b = y[orderBy].toUpperCase();\n                    return a == b ? 0 : a > b ? 1 : -1;\n                  });\n                  dataFromMongoDb.forEach(function (item) {\n                    var moonfeature;\n                    moonfeature = item;\n                    moonfeature[\"key\"] = item[\"_id\"];\n\n                    _this12.allMoonfeatures.push(moonfeature); // Feature Types\n\n\n                    if (_this12.allMoonfeatureTypes.indexOf(moonfeature.featuretypetext) === -1) {\n                      _this12.allMoonfeatureTypes.push(moonfeature.featuretypetext);\n                    } // Approval status texts\n\n\n                    if (_this12.allMoonfeatureApprovalStatusTexts.indexOf(moonfeature.approvalstatustext) === -1) {\n                      _this12.allMoonfeatureApprovalStatusTexts.push(moonfeature.approvalstatustext);\n                    }\n                  }); // Resolve\n\n                  console.log(\"Resolving everything\");\n                  resolve();\n                }, function (error) {\n                  reject(error);\n                });\n              });\n            } else {\n              resolve();\n            }\n          }\n        });\n        return p;\n      }\n    }, {\n      key: \"getMoonfeatures\",\n      value: function getMoonfeatures(pageIndex, itemsPerPage, allMoonfeatures, filteredMoonfeatures) {\n        var _this13 = this;\n\n        this.moonfeatures = [];\n        var p = new Promise(function (resolve, reject) {\n          if (_this13.filteredMoonfeatures.length > 0) {\n            _this13.moonfeatures = filteredMoonfeatures.filter(function (value, index, array) {\n              return index >= (pageIndex - 1) * itemsPerPage && index <= (pageIndex - 1) * itemsPerPage + itemsPerPage - 1;\n            });\n          } else {\n            if (_this13.isInitialGetMoonfeatures) {\n              _this13.moonfeatures = allMoonfeatures.filter(function (value, index, array) {\n                return index >= (pageIndex - 1) * itemsPerPage && index <= (pageIndex - 1) * itemsPerPage + itemsPerPage - 1;\n              });\n            }\n          }\n\n          resolve(_this13.moonfeatures);\n        });\n        return p;\n      }\n    }, {\n      key: \"getMoonfeaturesBySearchCriteria\",\n      value: function getMoonfeaturesBySearchCriteria(searchcriteria, itemsPerPage, allMoonfeatures) {\n        var _this14 = this;\n\n        this.moonfeatures = [];\n        this.filteredMoonfeatures = [];\n        var p = new Promise(function (resolve, reject) {\n          _this14.moonfeatures = allMoonfeatures.filter(function (value, index, array) {\n            return (value.name.toLowerCase().indexOf(searchcriteria.searchText.toLowerCase()) !== -1 || value.origin.toLowerCase().replace(\" \", \"\").indexOf(searchcriteria.searchText.toLowerCase()) !== -1) && (searchcriteria.useAdditionalCriteria && searchcriteria.criteriaFeatureTypeText !== \"\" ? value.featuretypetext.toLowerCase() === searchcriteria.criteriaFeatureTypeText.toLowerCase() : true) && (searchcriteria.useAdditionalCriteria && searchcriteria.criteriaApprovalStatusText !== \"\" ? value.approvalstatustext.toLowerCase() === searchcriteria.criteriaApprovalStatusText.toLowerCase() : true) && (searchcriteria.useAdditionalCriteria && searchcriteria.criteriaDiameterMin !== \"\" ? parseFloat(value.diameter) >= parseInt(searchcriteria.criteriaDiameterMin) : true) && (searchcriteria.useAdditionalCriteria && searchcriteria.criteriaDiameterMax !== \"\" ? parseFloat(value.diameter) <= parseInt(searchcriteria.criteriaDiameterMax) : true);\n          });\n          _this14.filteredMoonfeatures = _this14.moonfeatures;\n          _this14.isInitialGetMoonfeatures = false; // Resolve\n\n          resolve(_this14.moonfeatures);\n        });\n        return p;\n      }\n    }, {\n      key: \"getAllSolarEclipses\",\n      value: function getAllSolarEclipses() {\n        var _this15 = this;\n\n        var p = new Promise(function (resolve, reject) {\n          if (Globals.DATA_SOURCE == 0) {\n            // Firebase\n            if (_this15.allSolarEclipses.length === 0) {\n              firebase.database().ref('/solareclipses').orderByKey().on('child_added', function (snapshot) {\n                var solareclipse;\n                solareclipse = snapshot.val();\n                solareclipse[\"key\"] = snapshot.key;\n                solareclipse[\"url\"] = \"https://eclipse.gsfc.nasa.gov/SEplot/SEplot\" + (parseInt(snapshot.val().calendardate.substring(0, 4).toString()) <= 2050 ? \"2001\" : \"2051\") + \"/\" + \"SE\" + snapshot.val().calendardate.replace(/ /g, \"\") + snapshot.val().eclipsetype.substring(0, 1) + \".GIF\";\n\n                _this15.allSolarEclipses.push(solareclipse); // Resolve\n\n\n                resolve();\n              }, function (error) {\n                reject(error);\n              });\n            } else {\n              resolve();\n            }\n          }\n\n          if (Globals.DATA_SOURCE == 1) {\n            // MongoDb\n            if (_this15.allSolarEclipses.length === 0) {\n              var dataFromMongoDb;\n\n              _this15._http.get(Globals.MONGODB_API_URL + \"/solareclipses\").subscribe(function (data) {\n                dataFromMongoDb = data;\n                dataFromMongoDb.forEach(function (item) {\n                  var solareclipse;\n                  solareclipse = item;\n                  solareclipse[\"key\"] = item[\"_id\"];\n                  solareclipse[\"url\"] = \"https://eclipse.gsfc.nasa.gov/SEplot/SEplot\" + (parseInt(item.calendardate.substring(0, 4).toString()) <= 2050 ? \"2001\" : \"2051\") + \"/\" + \"SE\" + item.calendardate.replace(/ /g, \"\") + item.eclipsetype.substring(0, 1) + \".GIF\";\n\n                  _this15.allSolarEclipses.push(solareclipse);\n                }); // Resolve\n\n                resolve();\n              }, function (error) {\n                reject(error);\n              });\n            } else {\n              resolve();\n            }\n          }\n        });\n        return p;\n      }\n    }, {\n      key: \"getSolarEclipses\",\n      value: function getSolarEclipses(pageIndex, itemsPerPage, allSolarEclipses, filteredSolarEclipses) {\n        var _this16 = this;\n\n        this.solarEclipses = [];\n        var p = new Promise(function (resolve, reject) {\n          if (_this16.filteredSolarEclipses.length > 0) {\n            _this16.solarEclipses = filteredSolarEclipses.filter(function (value, index, array) {\n              return index >= (pageIndex - 1) * itemsPerPage && index <= (pageIndex - 1) * itemsPerPage + itemsPerPage - 1;\n            });\n          } else {\n            if (_this16.isInitialGetSolarEclipses) {\n              _this16.solarEclipses = allSolarEclipses.filter(function (value, index, array) {\n                return index >= (pageIndex - 1) * itemsPerPage && index <= (pageIndex - 1) * itemsPerPage + itemsPerPage - 1;\n              });\n            }\n          }\n\n          resolve(_this16.solarEclipses);\n        });\n        return p;\n      }\n    }, {\n      key: \"getSolarEclipsesBySearchCriteria\",\n      value: function getSolarEclipsesBySearchCriteria(searchcriteria, itemsPerPage, allSolarEclipses) {\n        var _this17 = this;\n\n        this.solarEclipses = [];\n        this.filteredSolarEclipses = [];\n        var p = new Promise(function (resolve, reject) {\n          _this17.solarEclipses = allSolarEclipses.filter(function (value, index, array) {\n            return value.calendardate.toLowerCase().indexOf(searchcriteria.searchText.toLowerCase()) !== -1;\n          });\n          _this17.filteredSolarEclipses = _this17.solarEclipses;\n          _this17.isInitialGetSolarEclipses = false; // Resolve\n\n          resolve(_this17.solarEclipses);\n        });\n        return p;\n      }\n    }, {\n      key: \"getAllLunarEclipses\",\n      value: function getAllLunarEclipses() {\n        var _this18 = this;\n\n        var p = new Promise(function (resolve, reject) {\n          if (Globals.DATA_SOURCE == 0) {\n            // Firebase\n            if (_this18.allLunarEclipses.length === 0) {\n              firebase.database().ref('/lunareclipses').orderByKey().on('child_added', function (snapshot) {\n                var lunareclipse;\n                lunareclipse = snapshot.val();\n                lunareclipse[\"key\"] = snapshot.key;\n                lunareclipse[\"url\"] = \"https://eclipse.gsfc.nasa.gov/LEplot/LEplot\" + (parseInt(snapshot.val().calendardate.substring(0, 4).toString()) <= 2050 ? \"2001\" : \"2051\") + \"/\" + \"LE\" + snapshot.val().calendardate.replace(/ /g, \"\") + snapshot.val().eclipsetype.substring(0, 1) + \".pdf\";\n\n                _this18.allLunarEclipses.push(lunareclipse); // Resolve\n\n\n                resolve();\n              }, function (error) {\n                reject(error);\n              });\n            } else {\n              resolve();\n            }\n          }\n\n          if (Globals.DATA_SOURCE == 1) {\n            // MongoDb\n            if (_this18.allLunarEclipses.length === 0) {\n              var dataFromMongoDb;\n\n              _this18._http.get(Globals.MONGODB_API_URL + \"/lunareclipses\").subscribe(function (data) {\n                dataFromMongoDb = data;\n                dataFromMongoDb.forEach(function (item) {\n                  var lunareclipse;\n                  lunareclipse = item;\n                  lunareclipse[\"key\"] = item[\"_id\"];\n                  lunareclipse[\"url\"] = \"https://eclipse.gsfc.nasa.gov/LEplot/LEplot\" + (parseInt(item.calendardate.substring(0, 4).toString()) <= 2050 ? \"2001\" : \"2051\") + \"/\" + \"LE\" + item.calendardate.replace(/ /g, \"\") + item.eclipsetype.substring(0, 1) + \".pdf\";\n\n                  _this18.allLunarEclipses.push(lunareclipse);\n                }); // Resolve\n\n                resolve();\n              }, function (error) {\n                reject(error);\n              });\n            } else {\n              resolve();\n            }\n          }\n        });\n        return p;\n      }\n    }, {\n      key: \"getLunarEclipses\",\n      value: function getLunarEclipses(pageIndex, itemsPerPage, allLunarEclipses, filteredLunarEclipses) {\n        var _this19 = this;\n\n        this.lunarEclipses = [];\n        var p = new Promise(function (resolve, reject) {\n          if (_this19.filteredLunarEclipses.length > 0) {\n            _this19.lunarEclipses = filteredLunarEclipses.filter(function (value, index, array) {\n              return index >= (pageIndex - 1) * itemsPerPage && index <= (pageIndex - 1) * itemsPerPage + itemsPerPage - 1;\n            });\n          } else {\n            if (_this19.isInitialGetLunarEclipses) {\n              _this19.lunarEclipses = allLunarEclipses.filter(function (value, index, array) {\n                return index >= (pageIndex - 1) * itemsPerPage && index <= (pageIndex - 1) * itemsPerPage + itemsPerPage - 1;\n              });\n            }\n          }\n\n          resolve(_this19.lunarEclipses);\n        });\n        return p;\n      }\n    }, {\n      key: \"getLunarEclipsesBySearchCriteria\",\n      value: function getLunarEclipsesBySearchCriteria(searchcriteria, itemsPerPage, allLunarEclipses) {\n        var _this20 = this;\n\n        this.lunarEclipses = [];\n        this.filteredLunarEclipses = [];\n        var p = new Promise(function (resolve, reject) {\n          _this20.lunarEclipses = allLunarEclipses.filter(function (value, index, array) {\n            return value.calendardate.toLowerCase().indexOf(searchcriteria.searchText.toLowerCase()) !== -1;\n          });\n          _this20.filteredLunarEclipses = _this20.lunarEclipses;\n          _this20.isInitialGetLunarEclipses = false; // Resolve\n\n          resolve(_this20.lunarEclipses);\n        });\n        return p;\n      }\n    }]);\n\n    return BackendService;\n  }();\n\n  BackendService.ɵfac = function BackendService_Factory(t) {\n    return new (t || BackendService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CalculationsService));\n  };\n\n  BackendService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BackendService,\n    factory: BackendService.ɵfac\n  });\n  return BackendService;\n})();","map":null,"metadata":{},"sourceType":"module"}