{"ast":null,"code":"import _classCallCheck from \"C:/Users/Fritz7x64/Documents/Angular/astro-info/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Fritz7x64/Documents/Angular/astro-info/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpClient } from '@angular/common/http';\nimport { map, catchError } from 'rxjs';\nimport { Globals } from 'common/globals';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var GoogleService = /*#__PURE__*/(function () {\n  var GoogleService = /*#__PURE__*/function () {\n    function GoogleService(_http) {\n      _classCallCheck(this, GoogleService);\n\n      this._http = _http;\n    }\n\n    _createClass(GoogleService, [{\n      key: \"getTimeZone\",\n      value: function getTimeZone(lat, lng, timestamp) {\n        var api_key = Globals.GOOGLE_MAPS_API_KEY;\n        return this._http.get('https://maps.googleapis.com/maps/api/timezone/json?location=' + lat + ',' + lng + '&timestamp=' + timestamp.toString() + '&key=' + api_key).pipe(map(function (request) {\n          return request;\n        })).pipe(catchError(function (err) {\n          throw \"Error fetching data from server: \" + err;\n        }));\n      }\n    }]);\n\n    return GoogleService;\n  }();\n\n  GoogleService.ɵfac = function GoogleService_Factory(t) {\n    return new (t || GoogleService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  GoogleService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GoogleService,\n    factory: GoogleService.ɵfac\n  });\n  return GoogleService;\n})();","map":null,"metadata":{},"sourceType":"module"}