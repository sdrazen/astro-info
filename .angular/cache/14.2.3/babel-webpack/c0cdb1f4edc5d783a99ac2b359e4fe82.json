{"ast":null,"code":"import _classCallCheck from \"C:/Users/Fritz7x64/Documents/Angular/astro-info/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Fritz7x64/Documents/Angular/astro-info/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Component } from '@angular/core';\nimport { FirebaseAuthService } from './shared/firebase.auth.service';\nimport { UserSettingsService } from './shared/user.settings.service';\nimport { TranslationsService } from './shared/translations.service';\nimport { IssService } from './shared/iss.service';\nimport { Router } from '@angular/router';\nimport { interval, map } from 'rxjs';\n\nvar IssComponent = /*#__PURE__*/function () {\n  function IssComponent(_firebaseAuthService, _router, _userSettingsService, _translationsService, _issService) {\n    _classCallCheck(this, IssComponent);\n\n    this._firebaseAuthService = _firebaseAuthService;\n    this._router = _router;\n    this._userSettingsService = _userSettingsService;\n    this._translationsService = _translationsService;\n    this._issService = _issService; // Variables for various error messages\n\n    this.errorMessageIss = \"\"; // Variables for iss service\n\n    this.lat = 0;\n    this.lng = 0;\n    this.altitude = 0;\n    this.velocity = 0;\n    this.timestamp = 0;\n    this.dateTime = \"\";\n    this.refreshPeriod = 5000;\n    this.refreshPeriodInSeconds = 5; // Variables for Google Maps\n\n    this.zoom = 2;\n    this.draggable = false;\n    this.iconUrl = \"assets/img/iss.ico\"; // Variables for translations\n\n    this.t_IssComponent_PanelTitle = \"Current ISS position\";\n    this.t_IssComponent_MapTitle = \"Current ISS position and data\";\n    this.t_IssComponent_Latitude = \"Latitude\";\n    this.t_IssComponent_Longitude = \"Longitude\";\n    this.t_IssComponent_Altitude = \"Altitude (km)\";\n    this.t_IssComponent_Velocity = \"Velocity (km/h)\";\n    this.t_IssComponent_DateTime = \"Date/Time\";\n    this.t_IssComponent_DataRefreshPeriod = \"Data refresh period (sec)\";\n    this.t_IssComponent_AlertTextPart1 = \"Data will be automatically updated every\";\n    this.t_IssComponent_AlertTextPart2 = \"seconds\";\n  }\n\n  _createClass(IssComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      //   var p = this._firebaseAuthService.listenForAuthStateChanges();\n      //   p.then(user => {\n      //     this.isLoggedIn = true;\n      //     this.currentUser = user;\n      //     // Initial observable subsription\n      //     this._issService.getCurrentIssPosition()\n      //         .subscribe(data => {\n      //             this.currentIssPosition$ = data;\n      //             this.lat = data.latitude;\n      //             this.lng = data.longitude;\n      //             this.altitude = Math.round(data.altitude);\n      //             this.velocity = Math.round(data.velocity);\n      //             this.timestamp = data.timestamp;\n      //             this.dateTime = this.convertTimestampToDateTime(this.timestamp);\n      //         }, (err) => this.errorMessageIss = err);\n      //     // Use data from iss service periodically\n      //     this.intervalObservableSubscription$ = IntervalObservable.create(this.refreshPeriod)\n      //         .switchMap(() => {\n      //             return this._issService.getCurrentIssPosition();\n      //         })\n      //         .subscribe(data => {\n      //             this.currentIssPosition$ = data;\n      //             this.lat = data.latitude;\n      //             this.lng = data.longitude;\n      //             this.altitude = Math.round(data.altitude);\n      //             this.velocity = Math.round(data.velocity);\n      //             this.timestamp = data.timestamp;\n      //             this.dateTime = this.convertTimestampToDateTime(this.timestamp);\n      //         }, (err) => this.errorMessageIss = err);\n      //     // Translations\n      //     this.translate();\n      //   })\n      //   .catch(value => {this.isLoggedIn = false; this._router.navigate (['/']);})\n      this.isLoggedIn = true; // this.currentUser = user;\n      // Initial observable subsription\n\n      this._issService.getCurrentIssPosition().subscribe(function (data) {\n        _this.currentIssPosition$ = data;\n        _this.lat = data.latitude;\n        _this.lng = data.longitude;\n        _this.altitude = Math.round(data.altitude);\n        _this.velocity = Math.round(data.velocity);\n        _this.timestamp = data.timestamp;\n        _this.dateTime = _this.convertTimestampToDateTime(_this.timestamp);\n      }, function (err) {\n        return _this.errorMessageIss = err;\n      }); // Use data from iss service periodically\n\n\n      this.intervalObservableSubscription$ = interval(this.refreshPeriod).pipe(map(function () {\n        return _this._issService.getCurrentIssPosition();\n      })).subscribe(function (data) {\n        _this.currentIssPosition$ = data;\n        _this.lat = data.latitude;\n        _this.lng = data.longitude;\n        _this.altitude = Math.round(data.altitude);\n        _this.velocity = Math.round(data.velocity);\n        _this.timestamp = data.timestamp;\n        _this.dateTime = _this.convertTimestampToDateTime(_this.timestamp);\n      }, function (err) {\n        return _this.errorMessageIss = err;\n      }); // Translations\n\n      this.translate();\n    }\n  }, {\n    key: \"convertTimestampToDateTime\",\n    value: function convertTimestampToDateTime(timestamp) {\n      var d = new Date(timestamp * 1000);\n      var yyyy = d.getFullYear();\n      var mm = ('0' + (d.getMonth() + 1)).slice(-2); // Months are zero based. Add leading 0.\n\n      var dd = ('0' + d.getDate()).slice(-2);\n      var hh = ('0' + d.getHours()).slice(-2);\n      var min = ('0' + d.getMinutes()).slice(-2);\n      var sec = ('0' + d.getSeconds()).slice(-2);\n      return yyyy.toString() + \"-\" + mm + \"-\" + dd + \" \" + hh + \":\" + min + \":\" + sec;\n    }\n  }, {\n    key: \"onRefreshPeriodInSecondsKeyUp\",\n    value: function onRefreshPeriodInSecondsKeyUp() {\n      var _this2 = this;\n\n      if (parseInt(this.refreshPeriodInSeconds.toString()) > 0) {\n        this.intervalObservableSubscription$.unsubscribe();\n        this.refreshPeriod = parseInt(this.refreshPeriodInSeconds.toString()) * 1000; // Use data from iss service periodically\n\n        this.intervalObservableSubscription$ = interval(this.refreshPeriod).pipe(map(function () {\n          return _this2._issService.getCurrentIssPosition();\n        })).subscribe(function (data) {\n          _this2.currentIssPosition$ = data;\n          _this2.lat = data.latitude;\n          _this2.lng = data.longitude;\n          _this2.altitude = Math.round(data.altitude);\n          _this2.velocity = Math.round(data.velocity);\n          _this2.timestamp = data.timestamp;\n          _this2.dateTime = _this2.convertTimestampToDateTime(_this2.timestamp);\n        }, function (err) {\n          return _this2.errorMessageIss = err;\n        });\n      }\n    }\n  }, {\n    key: \"translate\",\n    value: function translate() {\n      var _this3 = this;\n\n      if (this._translationsService.translationsSetToVariables === false) {\n        this._translationsService.setTranslationsForLanguage(this._userSettingsService.languageId).then(function () {\n          // Translations\n          _this3.t_IssComponent_PanelTitle = _this3._translationsService.t_IssComponent_PanelTitle;\n          _this3.t_IssComponent_MapTitle = _this3._translationsService.t_IssComponent_MapTitle;\n          _this3.t_IssComponent_Latitude = _this3._translationsService.t_IssComponent_Latitude;\n          _this3.t_IssComponent_Longitude = _this3._translationsService.t_IssComponent_Longitude;\n          _this3.t_IssComponent_Altitude = _this3._translationsService.t_IssComponent_Altitude;\n          _this3.t_IssComponent_Velocity = _this3._translationsService.t_IssComponent_Velocity;\n          _this3.t_IssComponent_DateTime = _this3._translationsService.t_IssComponent_DateTime;\n          _this3.t_IssComponent_DataRefreshPeriod = _this3._translationsService.t_IssComponent_DataRefreshPeriod;\n          _this3.t_IssComponent_AlertTextPart1 = _this3._translationsService.t_IssComponent_AlertTextPart1;\n          _this3.t_IssComponent_AlertTextPart2 = _this3._translationsService.t_IssComponent_AlertTextPart2;\n        });\n      } else {\n        // Translations\n        this.t_IssComponent_PanelTitle = this._translationsService.t_IssComponent_PanelTitle;\n        this.t_IssComponent_MapTitle = this._translationsService.t_IssComponent_MapTitle;\n        this.t_IssComponent_Latitude = this._translationsService.t_IssComponent_Latitude;\n        this.t_IssComponent_Longitude = this._translationsService.t_IssComponent_Longitude;\n        this.t_IssComponent_Altitude = this._translationsService.t_IssComponent_Altitude;\n        this.t_IssComponent_Velocity = this._translationsService.t_IssComponent_Velocity;\n        this.t_IssComponent_DateTime = this._translationsService.t_IssComponent_DateTime;\n        this.t_IssComponent_DataRefreshPeriod = this._translationsService.t_IssComponent_DataRefreshPeriod;\n        this.t_IssComponent_AlertTextPart1 = this._translationsService.t_IssComponent_AlertTextPart1;\n        this.t_IssComponent_AlertTextPart2 = this._translationsService.t_IssComponent_AlertTextPart2;\n      }\n    }\n  }]);\n\n  return IssComponent;\n}();\n\nIssComponent = __decorate([Component({\n  selector: 'app-iss',\n  templateUrl: './iss.component.html',\n  styleUrls: ['./iss.component.css']\n}), __metadata(\"design:paramtypes\", [FirebaseAuthService, Router, UserSettingsService, TranslationsService, IssService])], IssComponent);\nexport { IssComponent };","map":null,"metadata":{},"sourceType":"module"}