{"ast":null,"code":"import _classCallCheck from \"C:/Users/Fritz7x64/Documents/Angular/astro-info/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Fritz7x64/Documents/Angular/astro-info/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as i0 from \"@angular/core\";\nexport var UserSettingsService = /*#__PURE__*/(function () {\n  var UserSettingsService = /*#__PURE__*/function () {\n    function UserSettingsService() {\n      _classCallCheck(this, UserSettingsService);\n\n      // Variables for user settings\n      this.lat = 0;\n      this.lng = 0;\n      this.timeZoneRawOffset = 0;\n      this.languageId = 0;\n      this.itemsPerPage = 0;\n      this.pagesPerPageset = 0;\n      this.userSettings = {\n        lat: 0,\n        lng: 0,\n        timeZoneRawOffset: 0,\n        languageId: 0,\n        itemsPerPage: 0,\n        pagesPerPageset: 0\n      };\n      this.userSettingsDefined = false;\n      this.userSettingsSetToVariables = false;\n    }\n\n    _createClass(UserSettingsService, [{\n      key: \"getUserSettings\",\n      value: function getUserSettings() {\n        // Are user settings defined?\n        if (localStorage.getItem('astro-info-usersettings') !== null && localStorage.getItem('astro-info-usersettings') !== undefined) {\n          // Get user settings from localStorage if available\n          this.userSettings = JSON.parse(localStorage.getItem('astro-info-usersettings'));\n          this.lat = parseFloat(this.userSettings.lat.toString());\n          this.lng = parseFloat(this.userSettings.lng.toString());\n          this.timeZoneRawOffset = parseInt(this.userSettings.timeZoneRawOffset.toString());\n          this.languageId = parseInt(this.userSettings.languageId.toString());\n          this.itemsPerPage = parseInt(this.userSettings.itemsPerPage.toString());\n          this.pagesPerPageset = parseInt(this.userSettings.pagesPerPageset.toString());\n          this.userSettingsDefined = true;\n          this.userSettingsSetToVariables = true;\n        } else {\n          // No user settings defined, set default values\n          this.lat = 45.814440;\n          this.lng = 15.977980;\n          this.timeZoneRawOffset = 0;\n          this.languageId = 0;\n          this.itemsPerPage = 10;\n          this.pagesPerPageset = 10;\n          this.userSettingsDefined = false;\n          this.userSettingsSetToVariables = true;\n        }\n\n        return;\n      }\n    }, {\n      key: \"setUserSettings\",\n      value: function setUserSettings(userSettings) {\n        // Set variables to new values\n        this.lat = userSettings.lat;\n        this.lng = userSettings.lng;\n        this.timeZoneRawOffset = userSettings.timeZoneRawOffset;\n        this.languageId = userSettings.languageId;\n        this.itemsPerPage = userSettings.itemsPerPage;\n        this.pagesPerPageset = userSettings.pagesPerPageset;\n        this.userSettings = userSettings; // Set user settings to localStorage\n\n        localStorage.setItem('astro-info-usersettings', JSON.stringify(userSettings)); // Set variable which tells that user settings are defined\n\n        this.userSettingsDefined = true; // Set variable which tells that all user settings have been set to variables (real or default ones)\n\n        this.userSettingsSetToVariables = true;\n        return;\n      }\n    }]);\n\n    return UserSettingsService;\n  }();\n\n  UserSettingsService.ɵfac = function UserSettingsService_Factory(t) {\n    return new (t || UserSettingsService)();\n  };\n\n  UserSettingsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserSettingsService,\n    factory: UserSettingsService.ɵfac\n  });\n  return UserSettingsService;\n})();","map":null,"metadata":{},"sourceType":"module"}