{"ast":null,"code":"import _classCallCheck from \"C:/Users/Fritz7x64/Documents/Angular/astro-info/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Fritz7x64/Documents/Angular/astro-info/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport * as i0 from \"@angular/core\";\nexport var GoogleService = /*#__PURE__*/(function () {\n  var GoogleService = /*#__PURE__*/function () {\n    function GoogleService(_http) {\n      _classCallCheck(this, GoogleService);\n\n      this._http = _http;\n    }\n\n    _createClass(GoogleService, [{\n      key: \"getTimeZone\",\n      value: function getTimeZone(lat, lng, timestamp) {\n        var api_key = 'AIzaSyBjpf1yPAcUToRRFLx9tTTXkiH-VLGSvps';\n        return this._http.get('https://maps.googleapis.com/maps/api/timezone/json?location=' + lat + ',' + lng + '&timestamp=' + timestamp.toString() + '&key=' + api_key).map(function (request) {\n          return request.json();\n        }).catch(this._serverError);\n      }\n    }, {\n      key: \"_serverError\",\n      value: function _serverError(err) {\n        if (err instanceof Response) {\n          return Observable.throw(\"Server error...\");\n        }\n\n        return Observable.throw(err);\n      }\n    }]);\n\n    return GoogleService;\n  }();\n\n  GoogleService.ɵfac = function GoogleService_Factory(t) {\n    i0.ɵɵinvalidFactory();\n  };\n\n  GoogleService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GoogleService,\n    factory: GoogleService.ɵfac\n  });\n  return GoogleService;\n})();","map":null,"metadata":{},"sourceType":"module"}