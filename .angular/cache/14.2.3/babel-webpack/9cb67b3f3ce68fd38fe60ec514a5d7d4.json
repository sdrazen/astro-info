{"ast":null,"code":"import _classCallCheck from \"C:/Users/Fritz7x64/Documents/Angular/astro-info/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Fritz7x64/Documents/Angular/astro-info/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport * as i0 from \"@angular/core\";\nexport var FlickrService = /*#__PURE__*/(function () {\n  var FlickrService = /*#__PURE__*/function () {\n    function FlickrService(_http) {\n      _classCallCheck(this, FlickrService);\n\n      this._http = _http;\n    }\n\n    _createClass(FlickrService, [{\n      key: \"getPhotos\",\n      value: function getPhotos(tags) {\n        var api_key = 'a3d7ab8d127095d544d1ab29021a37e1';\n        var method = 'flickr.photos.search';\n        var per_page = '21';\n        var tag_mode = 'all'; // any = OR, all = AND\n\n        return this._http.get('https://api.flickr.com/services/rest/?format=json&sort=random&method=' + method + '&tags=' + tags + '&per_page=' + per_page + '&tag_mode=' + tag_mode + '&api_key=' + api_key + '&nojsoncallback=1').map(function (request) {\n          return request.json();\n        }).catch(this._serverError);\n      }\n    }, {\n      key: \"_serverError\",\n      value: function _serverError(err) {\n        if (err instanceof Response) {\n          return Observable.throw(\"Server error...\");\n        }\n\n        return Observable.throw(err);\n      }\n    }]);\n\n    return FlickrService;\n  }();\n\n  FlickrService.ɵfac = function FlickrService_Factory(t) {\n    i0.ɵɵinvalidFactory();\n  };\n\n  FlickrService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FlickrService,\n    factory: FlickrService.ɵfac\n  });\n  return FlickrService;\n})();","map":null,"metadata":{},"sourceType":"module"}